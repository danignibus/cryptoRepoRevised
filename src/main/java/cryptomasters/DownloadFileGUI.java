/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cryptomasters;

import static cryptomasters.DownloadFileGUIOld.request;
import java.io.File;
import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;

/**
 *
 * @author kdonahoe
 */
public class DownloadFileGUI extends javax.swing.JFrame {
    public static RequestData request;
    /**
     * Creates new form DownloadFileGUI
     */
    public DownloadFileGUI(RequestData request) {
        DownloadFileGUI.request = request;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        directoryButtonGroup = new javax.swing.ButtonGroup();
        fileNameInput = new javax.swing.JTextField();
        newDirectoryNameInput = new javax.swing.JTextField();
        headerLabel = new javax.swing.JLabel();
        fileLabel = new javax.swing.JLabel();
        submitDownloadButton = new javax.swing.JButton();
        chooseDirectory = new javax.swing.JFileChooser();
        newDirectoryRadioButton = new javax.swing.JRadioButton();
        existingDirectoryRadioButton = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        fileNameInput.setText("file.txt");
        fileNameInput.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                fileNameInputMousePressed(evt);
            }
        });

        newDirectoryNameInput.setText("Enter new directory name...");
        newDirectoryNameInput.setVisible(false);
        newDirectoryNameInput.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                newDirectoryNameInputMousePressed(evt);
            }
        });

        headerLabel.setText("Name your file and select a directory on your computer to save it in!");

        fileLabel.setText("File: ");

        submitDownloadButton.setText("Download!");
        submitDownloadButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                submitDownloadButtonMousePressed(evt);
            }
        });

        chooseDirectory.setVisible(false);
        chooseDirectory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseDirectoryActionPerformed(evt);
            }
        });

        newDirectoryRadioButton.setText("Create a new directory");
        newDirectoryRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newDirectoryRadioButtonActionPerformed(evt);
            }
        });

        existingDirectoryRadioButton.setText("Download to existing directory");
        existingDirectoryRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                existingDirectoryRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(headerLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(268, 268, 268)
                        .addComponent(submitDownloadButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newDirectoryRadioButton)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(fileLabel)
                                .addGap(18, 18, 18)
                                .addComponent(fileNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(newDirectoryNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(existingDirectoryRadioButton))))
                .addContainerGap(105, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(chooseDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(headerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileLabel)
                    .addComponent(fileNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(newDirectoryRadioButton)
                .addGap(12, 12, 12)
                .addComponent(newDirectoryNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(existingDirectoryRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chooseDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(submitDownloadButton)
                .addContainerGap(388, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public String getSelectedButtonText(ButtonGroup buttonGroup){
        for(Enumeration<AbstractButton> buttons = buttonGroup.getElements(); buttons.hasMoreElements();){
            AbstractButton button = buttons.nextElement();
            if(button.isSelected()){
                return button.getText();
            }
        }
        return null;
    }
    
    
    private void chooseDirectoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseDirectoryActionPerformed
        // TODO add your handling code here:
         System.out.println("entered new Directory Radio button action");

        String command = evt.getActionCommand();
        if(command.equals(javax.swing.JFileChooser.APPROVE_SELECTION)){
            File selectedFile = chooseDirectory.getSelectedFile();
            
            String absolutePath = selectedFile.getAbsolutePath();
            request.setDownloadFileSaveName(absolutePath);
        
            System.out.println("Will download file to: "+request.getDownloadFileSaveName());

        }
        else if(command.equals(javax.swing.JFileChooser.CANCEL_OPTION)){
            JOptionPane.showMessageDialog(this, "Please either select existing directory, or create a new one.");
        }

        
    }//GEN-LAST:event_chooseDirectoryActionPerformed

    private void fileNameInputMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileNameInputMousePressed
        // TODO add your handling code here:
        fileNameInput.setText("");
    }//GEN-LAST:event_fileNameInputMousePressed

    private void newDirectoryNameInputMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newDirectoryNameInputMousePressed
        // TODO add your handling code here:
        newDirectoryNameInput.setText("");
    }//GEN-LAST:event_newDirectoryNameInputMousePressed

    private void submitDownloadButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitDownloadButtonMousePressed
        // TODO add your handling code here:
        String directoryChoice;
        if(fileNameInput.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please provide file name");
        }
        else{
//            String directoryChoice = getSelectedButtonText(directoryButtonGroup);
              directoryChoice = "Create a new directory";

            if(directoryChoice == null){
                JOptionPane.showMessageDialog(this, "Please select a radio option!");
            }
            else if(directoryChoice.equals("Create a new directory")){
                if(newDirectoryNameInput.getText().equals("")){
                    JOptionPane.showMessageDialog(this, "Please provide new directory name");
                }

                String downloadFileSaveName = fileNameInput.getText();
                request.downloadFileSaveName = downloadFileSaveName;
                String newDirectoryName = newDirectoryNameInput.getText();

                //FOR NOW, automatically saves new directory on my Desktop (have to change so not just me)
                request.downloadDirectory = "/Users/kdonahoe/Desktop/";

                try{
                    HttpsDownload downloadIt = new HttpsDownload(request);
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(this, "Wrong credentials supplied!");
                }

            }
            else if(directoryChoice.equals("Download to existing directory")){
                if(request.getDownloadFileSaveName() == null){
                       JOptionPane.showMessageDialog(this, "Please select directory");
                   }
                else{
                    try{
                        HttpsDownload downloadIt = new HttpsDownload(request);
                    }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(this, "Wrong credentials supplied!");
                    }   
                }
            }
        }
        
    }//GEN-LAST:event_submitDownloadButtonMousePressed
    
    private void newDirectoryRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newDirectoryRadioButtonActionPerformed
        // TODO add your handling code here:
        newDirectoryNameInput.setVisible(true);
        newDirectoryRadioButton.setSelected(true);
        existingDirectoryRadioButton.setSelected(false);
        chooseDirectory.setVisible(false);
        revalidate();
    }//GEN-LAST:event_newDirectoryRadioButtonActionPerformed

    private void existingDirectoryRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_existingDirectoryRadioButtonActionPerformed
        // TODO add your handling code here:
        newDirectoryNameInput.setVisible(false);
        chooseDirectory.setVisible(true);
        existingDirectoryRadioButton.setSelected(true);
        newDirectoryRadioButton.setSelected(false);
        revalidate();
    }//GEN-LAST:event_existingDirectoryRadioButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DownloadFileGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DownloadFileGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DownloadFileGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DownloadFileGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DownloadFileGUI(request).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser chooseDirectory;
    private javax.swing.ButtonGroup directoryButtonGroup;
    private javax.swing.JRadioButton existingDirectoryRadioButton;
    private javax.swing.JLabel fileLabel;
    private javax.swing.JTextField fileNameInput;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JTextField newDirectoryNameInput;
    private javax.swing.JRadioButton newDirectoryRadioButton;
    private javax.swing.JButton submitDownloadButton;
    // End of variables declaration//GEN-END:variables
}
