/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cryptomasters;

import static cryptomasters.DownloadFileGUIOld.request;
import static cryptomasters.UploadFileGUI.request;
import java.io.File;
import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;

/**
 *
 * @author kdonahoe
 */
public class DownloadFileGUI extends javax.swing.JFrame {
    public static RequestData request;
    /**
     * Creates new form DownloadFileGUI
     */
    public DownloadFileGUI(RequestData request) {
        DownloadFileGUI.request = request;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        directoryButtonGroup = new javax.swing.ButtonGroup();
        fileNameInput = new javax.swing.JTextField();
        newDirectoryNameInput = new javax.swing.JTextField();
        headerLabel = new javax.swing.JLabel();
        fileLabel = new javax.swing.JLabel();
        submitDownloadButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        fileNameInput.setText("file.txt");
        fileNameInput.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                fileNameInputMousePressed(evt);
            }
        });

        newDirectoryNameInput.setText("Enter new directory name...");
        newDirectoryNameInput.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                newDirectoryNameInputMousePressed(evt);
            }
        });

        headerLabel.setText("Name your file and directory on your computer to save it in!");

        fileLabel.setText("File: ");

        submitDownloadButton.setText("Download!");
        submitDownloadButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                submitDownloadButtonMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(headerLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addComponent(fileLabel)
                        .addGap(18, 18, 18)
                        .addComponent(fileNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(newDirectoryNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(263, 263, 263)
                        .addComponent(submitDownloadButton)))
                .addContainerGap(157, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(headerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileLabel)
                    .addComponent(fileNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(newDirectoryNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(submitDownloadButton)
                .addContainerGap(91, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void fileNameInputMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileNameInputMousePressed
        // TODO add your handling code here:
        fileNameInput.setText("");
    }//GEN-LAST:event_fileNameInputMousePressed

    private void newDirectoryNameInputMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newDirectoryNameInputMousePressed
        // TODO add your handling code here:
        newDirectoryNameInput.setText("");
    }//GEN-LAST:event_newDirectoryNameInputMousePressed

    private void submitDownloadButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitDownloadButtonMousePressed
        // TODO add your handling code here:
        if(fileNameInput.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please provide file name");
        }
        else{              
                String downloadFileSaveName = fileNameInput.getText();
                request.downloadFileSaveName = downloadFileSaveName;
                String newDirectoryName = "/Users/kdonahoe/Desktop/" + newDirectoryNameInput.getText();

                request.downloadDirectory = newDirectoryName+"/";
                boolean newFile = new File(request.downloadDirectory).mkdirs();

                try{
                    HttpsDownload downloadIt = new HttpsDownload(request);
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(this, "Wrong credentials supplied!");
                }

            
            
         
            
        }
        this.setVisible(false);
        RequestData newRequest = new RequestData();
            newRequest.setUserCredentials(request.userCredentials);
            newRequest.setUserGroupKey(request.userGroupKey);
            UploadDownloadGUI startOverGUI = new UploadDownloadGUI(newRequest);
            startOverGUI.setVisible(true);
        
        
    }//GEN-LAST:event_submitDownloadButtonMousePressed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DownloadFileGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DownloadFileGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DownloadFileGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DownloadFileGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DownloadFileGUI(request).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup directoryButtonGroup;
    private javax.swing.JLabel fileLabel;
    private javax.swing.JTextField fileNameInput;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JTextField newDirectoryNameInput;
    private javax.swing.JButton submitDownloadButton;
    // End of variables declaration//GEN-END:variables
}
